{"version":3,"sources":["../node_modules/caver-js/packages sync /^/.*/src/index/.js$","components/Templates/main.jsx","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Main","maxToken","connect","sendSetup","mint","currentAddress","className","slice","join","onClick","abi","require","caver","Caver","window","contractAddress","nftContract","contract","App","useState","klaytn","selectedAddress","setCurrentAddress","setMaxToken","useEffect","on","accounts","a","console","log","_kaikas","isApproved","init","enableWallet","error","alert","isUnlocked","enable","getTotalSupply","methods","totalSupply","call","result","transactionParams","type","from","to","value","gas","data","mintSwan","encodeABI","klay","sendTransaction","receipt","tx","setupSale","props","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.2686fb8b.chunk.js","sourcesContent":["var map = {\n\t\"./caver-abi/src/index.js\": 75,\n\t\"./caver-account/src/index.js\": 37,\n\t\"./caver-contract/src/index.js\": 49,\n\t\"./caver-core-helpers/src/index.js\": 16,\n\t\"./caver-core-method/src/index.js\": 34,\n\t\"./caver-core-requestmanager/caver-providers-http/src/index.js\": 202,\n\t\"./caver-core-requestmanager/caver-providers-ipc/src/index.js\": 206,\n\t\"./caver-core-requestmanager/caver-providers-ws/src/index.js\": 200,\n\t\"./caver-core-requestmanager/src/index.js\": 197,\n\t\"./caver-core-subscriptions/src/index.js\": 71,\n\t\"./caver-core/src/index.js\": 26,\n\t\"./caver-ipfs/src/index.js\": 225,\n\t\"./caver-kct/src/index.js\": 237,\n\t\"./caver-klay/caver-klay-accounts/src/index.js\": 240,\n\t\"./caver-klay/caver-klay-personal/src/index.js\": 243,\n\t\"./caver-klay/src/index.js\": 244,\n\t\"./caver-middleware/src/index.js\": 117,\n\t\"./caver-net/src/index.js\": 134,\n\t\"./caver-rpc/src/index.js\": 245,\n\t\"./caver-rtm/src/index.js\": 74,\n\t\"./caver-transaction/src/index.js\": 246,\n\t\"./caver-utils/iban/src/index.js\": 193,\n\t\"./caver-utils/promievent/src/index.js\": 192,\n\t\"./caver-utils/src/index.js\": 0,\n\t\"./caver-validator/src/index.js\": 135,\n\t\"./caver-wallet/src/index.js\": 128\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 262;","const admin = \"0xC5b8C18AD93976927a7F3Ffb9998A458efE4bdD4\";\r\n\r\nexport default function Main({\r\n  maxToken,\r\n  connect,\r\n  sendSetup,\r\n  mint,\r\n  currentAddress,\r\n}) {\r\n  return (\r\n    <div className=\"main\">\r\n      {/* <Header/><Form/> */}\r\n      <div className=\"content\">\r\n        <div className=\"address\">\r\n          {currentAddress ? (\r\n            <div>\r\n              {[currentAddress.slice(0, 5), currentAddress.slice(38)].join(\r\n                \"...\"\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"address-connect\" onClick={connect}>\r\n              Connect\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"title\">\r\n          <h1>\r\n            Project <span>Swan.</span>\r\n          </h1>\r\n        </div>\r\n        <div>Price - 0.1 Klay</div>\r\n\r\n        <div className=\"info\">\r\n          <h2>\r\n            {maxToken}\r\n            <span>/50</span>\r\n          </h2>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n          <button className=\"btn\" onClick={mint}>\r\n            MINT\r\n          </button>\r\n          {currentAddress === admin && (\r\n            <button className=\"btn\" onClick={sendSetup}>\r\n              setup\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Caver from \"caver-js\";\r\nimport Main from \"./components/Templates/main\";\r\nimport \"./App.css\";\r\n\r\nconst abi = require(\"./abi.json\");\r\nconst caver = new Caver(window[\"klaytn\"]);\r\nconst contractAddress = \"0x739A5B82A2849ab57E41F14096FF0091349D2874\";\r\nconst nftContract = new caver.contract(abi, contractAddress);\r\n\r\nexport default function App() {\r\n  const [currentAddress, setCurrentAddress] = useState(\r\n    window.klaytn?.selectedAddress\r\n  );\r\n  const [maxToken, setMaxToken] = useState(0);\r\n\r\n  useEffect(() => {\r\n    window.klaytn.on(\"accountsChanged\", async (accounts) => {\r\n      console.log(\"계정정보 변경됨\", accounts);\r\n      if (await window.klaytn._kaikas.isApproved()) {\r\n        setCurrentAddress(accounts[0]);\r\n      }\r\n    });\r\n\r\n    const init = async () => {\r\n      try {\r\n        enableWallet();\r\n      } catch (error) {\r\n        alert(\"연결된 지갑이 없습니다. Kaikas 지갑 연결을 부탁드립니다.\");\r\n        console.log(error);\r\n      }\r\n    };\r\n    init();\r\n  }, []);\r\n\r\n  const enableWallet = async () => {\r\n    const isApproved = await window.klaytn._kaikas.isApproved();\r\n    const isUnlocked = await window.klaytn._kaikas.isUnlocked();\r\n    if (!isApproved || !isUnlocked) return await window.klaytn.enable();\r\n  };\r\n  const getTotalSupply = async () => {\r\n    const result = await nftContract.methods.totalSupply().call();\r\n    setMaxToken(result);\r\n  };\r\n  const connect = async () => {\r\n    await window.klaytn.enable();\r\n  };\r\n  const mint = async () => {\r\n    enableWallet();\r\n\r\n    const transactionParams = {\r\n      type: \"SMART_CONTRACT_EXECUTION\",\r\n      from: window.klaytn.selectedAddress,\r\n      to: contractAddress,\r\n      value: 0,\r\n      gas: 500000,\r\n      data: nftContract.methods.mintSwan(1).encodeABI(),\r\n    };\r\n\r\n    await caver.klay\r\n      .sendTransaction(transactionParams)\r\n      .on(\"receipt\", async (receipt) => {\r\n        alert(\"민팅 성공! OpenSea 계정을 확인해주세요.\");\r\n        await getTotalSupply();\r\n      })\r\n      .on(\"error\", (error) => {\r\n        alert(\"민팅에 실패하셨습니다.\");\r\n      });\r\n  };\r\n  const sendSetup = async () => {\r\n    // const setupInfo = {\r\n    //   newAntibotInterval : '10', // number,\r\n    //   newSwanContract : '0x739A5B82A2849ab57E41F14096FF0091349D2874', // string, swanContractAddress\r\n    //   newMintLimitPerBlock : '50', // number,\r\n    //   newMintLimitPerSale : '1', // number,\r\n    //   newTokenBaseURI : 'https://howootest01.s3.ap-northeast-2.amazonaws.com/metadata/test/', // string,\r\n    //   newMintStartBlockNumber: '83818389', // number,\r\n    //   newMaxSaleAmount: '50', // number,\r\n    //   newMintPrice: '0.00' // number,\r\n    // }\r\n\r\n    const tx = {\r\n      type: \"SMART_CONTRACT_EXECUTION\",\r\n      from: currentAddress,\r\n      to: contractAddress,\r\n      value: 0,\r\n      gas: 500000,\r\n      data: nftContract.methods\r\n        .setupSale(\r\n          \"10\", // number,\r\n          \"0x739A5B82A2849ab57E41F14096FF0091349D2874\", // string, swanContractAddress\r\n          \"50\", // number, 총 발행량\r\n          \"1\", // number,\r\n          \"https://howootest01.s3.ap-northeast-2.amazonaws.com/metadata/test/\", // string,\r\n          \"83818389\", // number,\r\n          \"50\", // number,\r\n          \"0\" // number,\r\n        )\r\n        .encodeABI(),\r\n    };\r\n\r\n    await caver.klay\r\n      .sendTransaction(tx)\r\n      .on(\"receipt\", (receipt) => {})\r\n      .on(\"error\", (error) => {});\r\n  };\r\n\r\n  getTotalSupply();\r\n\r\n  const props = {\r\n    maxToken,\r\n    connect,\r\n    sendSetup,\r\n    mint,\r\n    currentAddress,\r\n  };\r\n\r\n  return <Main {...props} />;\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}