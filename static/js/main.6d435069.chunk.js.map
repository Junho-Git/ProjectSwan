{"version":3,"sources":["../node_modules/caver-js/packages sync /^/.*/src/index/.js$","components/Templates/main.jsx","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Main","maxToken","connect","sendSetup","mint","currentAddress","className","onClick","abi","require","caver","Caver","window","App","useState","klaytn","selectedAddress","setCurrentAddress","setMaxToken","useEffect","test","a","enable","on","accounts","console","log","alert","contractAddress","nftContract","contract","getTotalSupply","methods","totalSupply","call","result","transactionParams","type","from","to","value","gas","data","mintSwan","encodeABI","klay","sendTransaction","receipt","error","tx","setupSale","props","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6d435069.chunk.js","sourcesContent":["var map = {\n\t\"./caver-abi/src/index.js\": 75,\n\t\"./caver-account/src/index.js\": 37,\n\t\"./caver-contract/src/index.js\": 49,\n\t\"./caver-core-helpers/src/index.js\": 16,\n\t\"./caver-core-method/src/index.js\": 34,\n\t\"./caver-core-requestmanager/caver-providers-http/src/index.js\": 202,\n\t\"./caver-core-requestmanager/caver-providers-ipc/src/index.js\": 206,\n\t\"./caver-core-requestmanager/caver-providers-ws/src/index.js\": 200,\n\t\"./caver-core-requestmanager/src/index.js\": 197,\n\t\"./caver-core-subscriptions/src/index.js\": 71,\n\t\"./caver-core/src/index.js\": 26,\n\t\"./caver-ipfs/src/index.js\": 225,\n\t\"./caver-kct/src/index.js\": 237,\n\t\"./caver-klay/caver-klay-accounts/src/index.js\": 240,\n\t\"./caver-klay/caver-klay-personal/src/index.js\": 243,\n\t\"./caver-klay/src/index.js\": 244,\n\t\"./caver-middleware/src/index.js\": 117,\n\t\"./caver-net/src/index.js\": 134,\n\t\"./caver-rpc/src/index.js\": 245,\n\t\"./caver-rtm/src/index.js\": 74,\n\t\"./caver-transaction/src/index.js\": 246,\n\t\"./caver-utils/iban/src/index.js\": 193,\n\t\"./caver-utils/promievent/src/index.js\": 192,\n\t\"./caver-utils/src/index.js\": 0,\n\t\"./caver-validator/src/index.js\": 135,\n\t\"./caver-wallet/src/index.js\": 128\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 262;","export default function Main({\r\n  maxToken,\r\n  connect,\r\n  sendSetup,\r\n  mint,\r\n  currentAddress,\r\n}) {\r\n  return (\r\n    <div className=\"main\">\r\n      {/* <Header/><Form/> */}\r\n      <div className=\"content\">\r\n        <div>\r\n          <h1>Take a hit, let's make a noise</h1>\r\n        </div>\r\n        <div>\r\n          {maxToken}\r\n          <button onClick={connect}>connect</button>\r\n          <button onClick={sendSetup}>setup</button>\r\n          <button onClick={mint}>mint</button>\r\n        </div>\r\n        <p>연결된 계정의 공개키: {currentAddress}</p>\r\n        <div>\r\n          <button className=\"btn\">Minting</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Caver from \"caver-js\";\r\nimport Main from \"./components/Templates/main\";\r\nimport \"./App.css\";\r\n\r\nconst abi = require(\"./abi.json\");\r\nconst caver = new Caver(window[\"klaytn\"]);\r\n\r\nexport default function App() {\r\n  const [currentAddress, setCurrentAddress] = useState(\r\n    \"\" || window.klaytn.selectedAddress\r\n  );\r\n  const [maxToken, setMaxToken] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const test = async () => {\r\n      try {\r\n        await window.klaytn.enable();\r\n        window.klaytn.on(\"accountsChanged\", function (accounts) {\r\n          setCurrentAddress(accounts);\r\n          console.log(\"계정정보 변경됨\");\r\n        });\r\n      } catch (error) {\r\n        alert(\"연결된 지갑이 없습니다. Kaikas 지갑 연결을 부탁드립니다.\");\r\n      }\r\n    };\r\n    test();\r\n  }, []);\r\n\r\n  const contractAddress = \"0x739A5B82A2849ab57E41F14096FF0091349D2874\";\r\n  const nftContract = new caver.contract(abi, contractAddress);\r\n\r\n  const getTotalSupply = async () => {\r\n    const result = await nftContract.methods.totalSupply().call();\r\n    setMaxToken(result);\r\n    console.log(result);\r\n  };\r\n  getTotalSupply();\r\n\r\n  const connect = async () => {\r\n    await window.klaytn.enable();\r\n    window.klaytn.on(\"accountsChanged\", function (accounts) {\r\n      setCurrentAddress(accounts);\r\n      console.log(\"계정정보 변경됨\");\r\n    });\r\n  };\r\n\r\n  const mint = async () => {\r\n    const transactionParams = {\r\n      type: \"SMART_CONTRACT_EXECUTION\",\r\n      from: window.klaytn.selectedAddress,\r\n      to: contractAddress,\r\n      value: 0,\r\n      gas: 500000,\r\n      data: nftContract.methods.mintSwan(1).encodeABI(),\r\n    };\r\n\r\n    await caver.klay\r\n      .sendTransaction(transactionParams)\r\n      .on(\"receipt\", (receipt) => {\r\n        alert(\"민팅 성공! OpenSea 계정을 확인해주세요.\");\r\n      })\r\n      .on(\"error\", (error) => {\r\n        alert(\"민팅에 실패하셨습니다.\");\r\n      });\r\n  };\r\n\r\n  const sendSetup = async () => {\r\n    // const setupInfo = {\r\n    //   newAntibotInterval : '10', // number,\r\n    //   newSwanContract : '0x739A5B82A2849ab57E41F14096FF0091349D2874', // string, swanContractAddress\r\n    //   newMintLimitPerBlock : '50', // number,\r\n    //   newMintLimitPerSale : '1', // number,\r\n    //   newTokenBaseURI : 'https://howootest01.s3.ap-northeast-2.amazonaws.com/metadata/test/', // string,\r\n    //   newMintStartBlockNumber: '83818389', // number,\r\n    //   newMaxSaleAmount: '50', // number,\r\n    //   newMintPrice: '0.00' // number,\r\n    // }\r\n\r\n    const tx = {\r\n      type: \"SMART_CONTRACT_EXECUTION\",\r\n      from: currentAddress,\r\n      to: contractAddress,\r\n      value: 0,\r\n      gas: 500000,\r\n      data: nftContract.methods\r\n        .setupSale(\r\n          \"10\", // number,\r\n          \"0x739A5B82A2849ab57E41F14096FF0091349D2874\", // string, swanContractAddress\r\n          \"50\", // number, 총 발행량\r\n          \"1\", // number,\r\n          \"https://howootest01.s3.ap-northeast-2.amazonaws.com/metadata/test/\", // string,\r\n          \"83818389\", // number,\r\n          \"50\", // number,\r\n          \"0\" // number,\r\n        )\r\n        .encodeABI(),\r\n    };\r\n\r\n    await caver.klay\r\n      .sendTransaction(tx)\r\n      .on(\"receipt\", (receipt) => {})\r\n      .on(\"error\", (error) => {});\r\n  };\r\n\r\n  const props = {\r\n    maxToken,\r\n    connect,\r\n    sendSetup,\r\n    mint,\r\n    currentAddress,\r\n  };\r\n\r\n  return <Main {...props} />;\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}